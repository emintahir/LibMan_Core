@model LibMan_Core.Models.Lend

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>

<div>
    <h4>Lend</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Borrower.FullName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Borrower.FullName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.LendDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.LendDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DueDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DueDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.IsReturned)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IsReturned) 
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ReturnDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ReturnDate)
        </dd>
        <dt class = "col-sm-2">
            Over Due Day(s)
        </dt>
        <dd class = "col-sm-10">
            @if (!Model.IsReturned && (DateTime.Today > Model.DueDate))
            {
                var overDueDays = (DateTime.Today - Model.DueDate).Days.ToString();
                @overDueDays
            }
            else if (Model.IsReturned && (Model.ReturnDate.Value.Date > Model.DueDate.Date))
            {
                var overDueDays = (Model.ReturnDate - Model.DueDate).Value.Days.ToString();
                @overDueDays
            }
            else
            {
                <p>-</p>
            }
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
